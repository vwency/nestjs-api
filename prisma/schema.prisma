generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  user_id    String   @id @default(uuid()) @db.Uuid
  username   String   @unique @db.VarChar
  hash       String   @db.VarChar
  email      String?  @db.VarChar
  hashedRt   String?  @db.VarChar
  role       String?  @db.VarChar @default("user")

  columns    Columns[] 
  cards      Cards[]  
  comments   Comments[] 

  @@map("Users")
}

model Columns {
  column_id          String   @id @default(uuid()) @db.Uuid
  user_id            String   @db.Uuid
  column_name        String   @unique @db.VarChar
  description        String?   @db.VarChar

  cards              Cards[]  
  comments           Comments[] 

  user     Users    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@map("Columns")
}

model Cards {
  card_id           String   @id @default(uuid()) @db.Uuid
  user_id           String   @db.Uuid
  column_id         String   @db.Uuid
  card_name         String   @unique @db.VarChar
  description       String?   @db.VarChar

  comments          Comments[] 

  user     Users    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  column   Columns  @relation(fields: [column_id], references: [column_id], onDelete: Cascade)

  @@map("Cards")
}

model Comments {
  comment_id        String   @id @default(uuid()) @db.Uuid
  user_id           String   @db.Uuid
  column_id         String   @db.Uuid
  card_id           String   @db.Uuid
  comment_name      String   @unique @db.VarChar
  description       String?   @db.VarChar

  user              Users    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
  column            Columns  @relation(fields: [column_id], references: [column_id], onDelete: Cascade) 
  card              Cards    @relation(fields: [card_id], references: [card_id], onDelete: Cascade) 

  @@map("Comments")
}
